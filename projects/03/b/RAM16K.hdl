// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    DMux8Way(
      in=load,
      sel=address[0..2],
      a=ld0, b=ld1, c=ld2, d=ld3,
      e=ld4, f=ld5, g=ld6, h=ld7
    );

    RAM4K(in=in, load=ld0, address=address[3..13], out=ram0);
    RAM4K(in=in, load=ld1, address=address[3..13], out=ram1);
    RAM4K(in=in, load=ld2, address=address[3..13], out=ram2);
    RAM4K(in=in, load=ld3, address=address[3..13], out=ram3);
    RAM4K(in=in, load=ld4, address=address[3..13], out=ram4);
    RAM4K(in=in, load=ld5, address=address[3..13], out=ram5);
    RAM4K(in=in, load=ld6, address=address[3..13], out=ram6);
    RAM4K(in=in, load=ld7, address=address[3..13], out=ram7);

    Mux8Way16(
      a=ram0, b=ram1, c=ram2, d=ram3,
      e=ram4, f=ram5, g=ram6, h=ram7,
      sel=address[0..2],
      out=out
    );
}
