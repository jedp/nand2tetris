// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Only update state if one of the three control bits is asserted.
    Or(a=load, b=inc, out=x);
    Or(a=x, b=reset, out=update);

    Register(in=loop, load=update, out=r1, out=out);

    Add16(a=r1, b[0]=true, out=add1);
    // Inc, else retain current state.
    Mux16(a=in, b=add1, sel=inc, out=mux1);
    // Load, else mux1.
    Mux16(a=mux1, b=in, sel=load, out=mux2);
    // Reset, else mux2.
    Mux16(a=mux2, b[0]=false, sel=reset, out=mux3);

    // Keep value unchanged unless an update control bit is asserted.
    Mux16(a=r1, b=mux3, sel=update, out=loop);
}
